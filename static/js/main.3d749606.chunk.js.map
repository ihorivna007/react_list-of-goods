{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","App","state","NONE","alphSorted","setState","lengthSorted","reversed","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAoBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAYC,GAC7B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SArCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAMe,EAAb,4MACEC,MAAQ,CACNZ,SAAUJ,EAASiB,KACnBZ,YAAY,GAHhB,EAMEa,WAAa,WACX,EAAKC,SAAS,CAAEf,SAAUJ,EAASU,YAPvC,EAUEU,aAAe,WACb,EAAKD,SAAS,CAAEf,SAAUJ,EAASY,UAXvC,EAcES,SAAW,WACT,EAAKF,UAAS,SAAAH,GAAK,MAAK,CAAEX,YAAaW,EAAMX,gBAfjD,EAkBEiB,MAAQ,WACN,EAAKH,SAAS,CAAEd,YAAY,EAAOD,SAAUJ,EAASiB,QAnB1D,4CAsBE,WACE,MAAiCM,KAAKP,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAAaJ,EAASU,SAAW,GAAK,YACnEgB,QAASH,KAAKL,WAHhB,iCAQA,wBACEO,KAAK,SACLD,UAAS,4BAAuBpB,IAAaJ,EAASY,OAAS,GAAK,YACpEc,QAASH,KAAKH,aAHhB,4BAQA,wBACEK,KAAK,SACLD,UAAS,4BAAuBnB,EAAa,GAAK,YAClDqB,QAASH,KAAKF,SAHhB,qBAQGhB,GAAcD,IAAaJ,EAASiB,KAEjC,wBACEQ,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,mBAOE,MAIV,6BACE,6BACGpB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CsB,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBArExC,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d749606.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n// import { sortedLastIndexBy } from 'cypress/types/lodash';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((g1: string, g2: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  alphSorted = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  lengthSorted = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reversed = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.alphSorted}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={this.lengthSorted}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n            onClick={this.reversed}\n          >\n            Reverse\n          </button>\n          {\n            (isReversed || sortType !== SortType.NONE)\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              ) : ''\n          }\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map(good => (\n                <li data-cy=\"Good\" key={good}>{good}</li>\n              ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}